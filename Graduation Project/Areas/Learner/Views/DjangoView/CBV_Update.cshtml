<div style="max-width:75%; text-align:center; margin-left:auto; margin-right:auto;" class="d-flex flex-column justify-content-center align-content-center text-start">
    <h1 class="p-4 my-5 custom-title" style="font-size: 80px; font-weight: 700;">UpdateView</h1>
    <h4 class="text-center mt-4 mb-5">Built in class used to update model object.</h4>
    <br>
    <hr />
    <h2 class="my-5 custom-title">Model</h2>
    <div class="rounded p-4 mb-5 mt-4 custom-div">
        <p class="mb-1">class Book(models.Model):</p>
        <p class="mb-1 mr-25">title = models.CharField(max_length=100)</p>
        <p class="mb-1 mr-25">available = models.BooleanField(default=False)</p>
    </div>
    <br>
    <hr />


    <h2 class="my-5 custom-title">View</h2>
    <div class="rounded p-4 mb-5 mt-4 custom-div">
        <p class="mb-1">from django.views.generic.edit import UpdateView</p>
        <p class="mb-1">from django.urls import reverse</p>
        <p class="mb-1">from app.models import Book</p>
        <p class="mb-1">from app.forms import UpdateForm</p>
        <p class="mb-1">class BookUpdateView(UpdateView):</p>
        <p class="mb-1 mr-25">model = Book # update object of Book</p>
        <p class="mb-1 mr-25">fields = ['title', 'available'] # define required fields that want to update</p>
        <p class="mb-1 mr-25">form_class = UpdateForm</p>
        <p class="mb-1 mr-25">success_url = reverse('home')</p>
    </div>
    <br>
    <hr />


    <h2 class="my-5 custom-title">Url</h2>
    <div class="rounded p-4 mb-5 mt-4 custom-div">
        <p class="mb-1">from django.urls import path</p>
        <p class="mb-1">from app.views import BookUpdateView</p>
        <p class="mb-1">urlpatterns = [</p>
        <p class="mb-1 mr-25">path('update/&lt;int:pk&gt;/', BookUpdateView.as_view(), name='book-update'),</p>
        <p class="mb-1">]</p>
    </div>
    <br>
    <hr />
    <h2 class="my-5 custom-title">Explanation</h2>
    <h5 class="mt-4 mb-5">
        You don't need to explicitly check whether the form is valid or invalid.
        before saving the object. Django's UpdateView handles form validation for you automatically.
        If the form is valid, it will update the object in the database and then redirect to the success_url.
        If the form is invalid, it will redisplay the form with validation errors.
    </h5>
</div>