<div style="max-width:75%; text-align:center; margin-left:auto; margin-right:auto;" class="d-flex flex-column justify-content-center align-content-center text-start">
    <h1 class="p-4 my-5 custom-title" style="font-size: 80px; font-weight: 700;">DeleteView</h1>
    <h4 class="text-center mt-4 mb-5">Built in class used to delete model object.</h4>
    
    <hr />
    <h2 class="my-5 custom-title">Model</h2>
    <div class="mt-3"></div>
    <pre class="mb-5">
        <code class="language-Django">
            class Book(models.Model):
                title = models.CharField(max_length=100)
                available = models.BooleanField(default=False)
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">View</h2>
    <div class="mt-3"></div>
    <pre class="mb-5">
        <code class="language-Django">
            from django.views.generic.edit import DeleteView
            from django.urls import reverse
            from app.models import Book
            class BookDeleteView(DeleteView):
                model = Book # delete object of Book
                success_url = reverse('home')
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">Url</h2>
    <div class="mt-3"></div>
    <pre class="mb-5">
        <code class="language-Django">
            from django.urls import path
            from app.views import BookDeleteView
            urlpatterns = [
                path('delete/&lt;int:pk&gt;/', BookDeleteView.as_view(), name='book-delete'),
            ]
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">Explanation</h2>
    <h5 class="mt-3 mb-5">
        DeleteView handles deletion automatically.
        If the deletion is valid, it will delete the object from the database and then redirect to the success_url.
    </h5>
</div>