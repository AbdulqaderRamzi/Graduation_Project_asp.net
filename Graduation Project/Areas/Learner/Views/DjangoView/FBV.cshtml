<div style="max-width:75%; text-align:center; margin-left:auto; margin-right:auto;" class="d-flex flex-column justify-content-center align-content-center text-start">
    <h1 class="p-4 my-5 custom-title" style="font-size: 80px; font-weight: 700;">Function-Based View</h1>
    <h4 class="text-center mt-4 mb-5">Build your first view function.</h4>
    <hr />
    <h5 class="mt-5">Function should always return response as view, text, JSON etc.</h5>
    <div class="mt-3"></div>
    <pre class="mb-5">
        <code class="language-Django">
            from django.http import HttpResponse
            def start(request):
                return HttpResponse("Hello world")
            <span></span>
        </code>
    </pre>
    <hr />
    <h5 class="mt-5">Don't forget to create a path for each function.</h5>
    <figure class="figure mt-3 mb-5">
        <img src="~/images/project_images/FBV/fbv1.png" class="figure-img img-fluid rounded img-border">
    </figure>
    <hr />
    <div class="mt-5"></div>
    <pre>
        <code class="language-Django">
            def display_id(request, id):
                return HttpResponse("ID: "+str(id))
            <span></span>
        </code>
    </pre>
    <figure class="figure mt-3">
        <img src="~/images/project_images/FBV/fbvid.png" class="figure-img img-fluid rounded img-border">
    </figure>
    <figure class="figure mb-5 mt-3">
        <img src="~/images/project_images/FBV/fbvid2.png" class="figure-img img-fluid rounded img-border">
    </figure>

    <hr />
    <h2 class="my-5 custom-title">Handle form</h2>
    <h5 class="mt-5 mb-2">form</h5>
    <pre class="mb-3">
        <code class="language-Django">
            from django.shortcuts import render
            from .forms import FormName
            def user_form_view(request):
                # if form is submitted
                if request.method == 'POST':
                    # request.POST has form data
                    form = FormName(request.POST)
                    # pass form data to form then check if form is valid
                    if form.is_valid():
                        # get data value from form by cleaning it
                        field = form.cleaned_data['FieldName']
                        # after you clean the data. you can use it to create, update and send emails etc.
                        return redirect()
                # if form is not submitted that means form is null
                else:
                    form = UserForm()
                return render(request, 'user_form.html', {'form': form})
            <span></span>
        </code>
    </pre>
    <h5 class="mt-5 mb-2">Model</h5>
    <pre class="mb-5">
        <code class="language-Django">
            class Car(models.Model):
                name = models.CharField(max_length=150)
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">Create</h2>
    <div class="mt-3"></div>
    <pre class="mb-5">
        <code class="language-Django">
            from django.shortcuts import render, redirect
            from .forms import CreateForm
            from .models import Car
            def create_car(request):
                if request.method == 'POST':
                    form = UpdateForm(request.POST, instance=car)
                    if form.is_valid():
                        name = form.cleaned_data['name']
                        Car.objects.create(name=name)
                        return redirect("home")
                else:
                    form = CreateForm()
                return render(request, 'create_form.html', {'form': form})
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">Update</h2>
    <div class="mt-3"></div>
    <pre>
        <code class="language-Django">
            from django.shortcuts import render, redirect
            from .forms import UpdateForm
            from .models import Car
            def update_car(request, id):
                car = get_object_or_404(Car, id=id)
                if request.method == 'POST':
                    form = UpdateForm(request.POST, instance=car)
                    if form.is_valid():
                        name = form.cleaned_data['name']
                        car.name = name
                        car.save()
                        return redirect("home")
                else:
                    form = UpdateForm(instance=car)
                return render(request, 'update_form.html', {'form': form})
            <span></span>
        </code>
    </pre>
    <hr />
    <h3 class="mt-5 custom-color">Why to pass instance?</h3>
    <h5 class="mt-5 mb-5">It will give the input a default value by current car value.</h5>

    <hr />
    <h2 class="my-5 custom-title">Example</h2>
    <h4 class="mt-4">With instance</h4>
    <figure class="figure mt-3">
        <img src="~/images/project_images/FBV/fbv3.png" class="figure-img img-fluid rounded img-border">
    </figure>
    <h4 class="mt-5">Without instance</h4>
    <figure class="figure mb-5 mt-3">
        <img src="~/images/project_images/FBV/fbv4.png" class="figure-img img-fluid rounded img-border">
    </figure>

    <hr />
    <h2 class="my-5 custom-title">Delete</h2>
    <div class="mt-3"></div>
    <pre class="mb-5">
        <code class="language-Django">
            from django.shortcuts import redirect
            from .models import Car
            def delete_car(request, id):
                car = get_object_or_404(Car, id=id)
                car.delete()
                return redirect("home")
            <span></span>
        </code>
    </pre>
</div>