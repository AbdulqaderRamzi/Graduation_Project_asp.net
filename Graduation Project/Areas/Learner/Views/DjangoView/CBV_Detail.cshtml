<div style="max-width:75%; text-align:center; margin-left:auto; margin-right:auto;" class="d-flex flex-column justify-content-center align-content-center text-start">
    <h1 class="p-4 my-5 custom-title" style="font-size: 80px; font-weight: 700;">DetailView</h1>
    <h4 class="text-center mt-4 mb-5">Built in class used to display single model object.</h4>
    
    <hr />
    <h2 class="my-5 custom-title">Model</h2>
    <div class="mt-3"></div>
    <pre class="mb-5">
        <code class="language-Django">
            class Book(models.Model):
                title = models.CharField(max_length=100)
                available = models.BooleanField(default=False)
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">View</h2>
    <div class="mt-3"></div>
    <pre class="mb-5">
        <code class="language-Django">
            from django.views.generic.edit import DetailView
            from app.models import Book
            class BookDetailView(DetailView):
                model = Book # Book.objects.get(id=id)
                context_object_name = 'book' # {'book':model}
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">Url</h2>
    <div class="mt-3"></div>
    <pre>
        <code class="language-Django">
            from app.views import BookDetailView
            urlpatterns = [
                path('book/&lt;int:pk&gt;/', BookDetailView.as_view()),
            ]
            <span></span>
        </code>
    </pre>
    <h5 class="mt-5 mb-5 custom-color">It has 4 features.</h5>

    <hr />
    <h2 class="my-5 custom-title">get_context_data</h2>
    <h4 class="mt-4 mb-3">Used to add more context data and change default context name.</h4>
    <pre class="mb-5">
        <code class="language-Django">
            def get_context_data(self, **kwargs):
                context = super().get_context_data(**kwargs)
                context['book'] = Book.objects.get(id=id)
                return context
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">queryset</h2>
    <h4 class="mt-4 mb-3">Used to define which objects to return.</h4>
    <pre class="mb-5">
        <code class="language-Django">
            queryset = Book.objects.get(id=id, available=True)
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">template_name</h2>
    <h4 class="mt-4 mb-3">Used to define template name that will be used to display the data.</h4>
    <pre class="mb-5">
        <code class="language-Django">
            template_name = 'books/book.html'
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">get_object</h2>
    <h4 class="mt-4 mb-5">Used to customize how to retrive an object.</h4>
    <h5 class="mt-5 mb-2">Url</h5>
    <pre class="mb-1">
        <code class="language-Django">
            path('book/&lt;int:bookid&gt;/', BookDetailView.as_view())
            <span></span>
        </code>
    </pre>
    <h5 class="mt-5">View</h5>
    <div class="mt-2"></div>
    <pre class="mb-5">
        <code class="language-Django">
            class BookDetailView(DetailView):
                model = Book
                context_object_name = 'book'
                def get_object(self, queryset=None):
                    # Retrieve the book using the primary key from the URL
                    book_id = self.kwargs.get('bookid')
                    return self.model.objects.get(pk=book_id)
            <span></span>
        </code>
    </pre>
</div>