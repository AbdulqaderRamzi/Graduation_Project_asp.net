<div style="max-width:75%; text-align:center; margin-left:auto; margin-right:auto;" class="d-flex flex-column justify-content-center align-content-center text-start">
    <h1 class="p-4 my-5 custom-title" style="font-size: 80px; font-weight: 700;">Check</h1>
    <h4 class="text-center mt-4 mb-5">Use check to check if particular parts of the project are exists or not.</h4>

    <hr />
    <h2 class="my-5 custom-title">Example</h2>
    <h5 class="mt-4 mb-0">Check if app exists in INSTALLED_APPS, if particular middleware exists in MIDDLEWARE.</h5>
    <h5 class="mt-3 mb-3">Create check file in your app to check current app.</h5>
    <h5 class="mt-0 mb-5">Import settings to check if the app exists in INSTALLED_APPS.</h5>
    <div class="mt-4"></div>
    <pre class="mb-5">
        <code class="language-Django">
            from django.conf import settings
            from django.core.checks import Error, register
            from django.urls import reverse, NoReverseMatch
            # Register your check function
            @@register()
            def fitst_check(app_configs, **kwargs):
                # store the errors
                errors = []
                app = 'app name'
                if app in settings.INSTALLED_APPS:
                    try:
                        # reverse any url in the app. to make sure it exists
                        reverse('list')
                    except NoReverseMatch:
                        errors.append(
                            Error('Looks like there is no app name url',
                                hint=f'Create a app name url',
                                obj=settings,
                                id='app.E002',
                            )
                        )
                return errors
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">Check apps</h2>
    <div class="mt-4"></div>
    <pre class="mb-5">
        <code class="language-Django">
            @@register()
            def second_check(app_configs, **kwargs):
                errors = []
                apps_needed = [
                    "jazzmin",
                    "django.contrib.humanize",
                    "admin_custom_menu",
                    "tabular_permissions",
                    "ckeditor",
                    "crispy_forms",
                    "django_countries",
                    "crispy_bootstrap4",
                ]
                # loop through each app in apps_needed. to check that all apps are exist in INSTALLED_APPS.
                for app in apps_needed:
                    if app not in settings.INSTALLED_APPS:
                        errors.append(
                            Error(f'{app} is not in the INSTALLED_APPS',
                                hint=f'Add {app} to INSTALLED_APPS .',
                                obj=settings,
                                id='base.E001',
                                )
                            )
                return errors
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">Check middleware</h2>
    <div class="mt-4"></div>
    <pre class="mb-5">
        <code class="language-Django">
            @@register()
            def check_middleware(app_configs, **kwargs):
                errors = []
                if "django.contrib.auth.middleware.AuthenticationMiddleware" not in settings.MIDDLEWARE:
                    errors.append(
                        Error('auth is missing',
                                hint=f'Add django.contrib.auth.middleware.AuthenticationMiddleware to the MIDDLEWARE',
                                obj=settings,
                                id='base.E002'
                            )
                        )
                return errors
            <span></span>
        </code>
    </pre>
</div>