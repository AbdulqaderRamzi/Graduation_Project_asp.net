<div style="max-width:75%; text-align:center; margin-left:auto; margin-right:auto;" class="d-flex flex-column justify-content-center align-content-center text-start">
    <h1 class="p-4 my-5 custom-title" style="font-size: 80px; font-weight: 700;">Simple Website</h1>
    <h5 class="text-center mb-5 mt-4">The website will be about displaying magazines with its blogs. blogs will be created by the author.</h5>
    <hr />
    <h4 class="mb-3 mt-5">Create the virtual environment.</h4>
    <pre>
        <code class="language-Django">
            python -m venv environment magazinevenv
            <span></span>
        </code>
    </pre>
    <h4 class="mb-3 mt-5">Activate the environment.</h4>
    <pre>
        <code class="language-Django">
            magazinevenv\Scripts\activate
            <span></span>
        </code>
    </pre>
    <h4 class="mb-3 mt-5">Install the Django.</h4>
    <pre>
        <code class="language-Django">
            python -m pip install Django
            <span></span>
        </code>
    </pre>
    <h4 class="mb-3 mt-5">Create the magazine project.</h4>
    <pre>
        <code class="language-Django">
            django-admin startproject magazine
            <span></span>
        </code>
    </pre>
    <h4 class="mb-3 mt-5">Create the blogs app.</h4>
    <pre>
        <code class="language-Django">
            python manage.py startapp blogs
            <span></span>
        </code>
    </pre>
    <h4 class="mb-3 mt-5">Download the jazzmin package.</h4>
    <pre>
        <code class="language-Django">
            pip install -U django-jazzmin
            <span></span>
        </code>
    </pre>
    <h6 class="mb-5 mt-5 custom-color">Note: Create urls file in blogs app.</h6>
    <hr />
    <h5 class="mb-3 mt-5">Add blogs and jazzmin into INSTALLED_APPS.</h5>
    <pre>
        <code class="language-Django">
            INSTALLED_APPS = [
                'jazzmin',
                'django.contrib.admin',
                ...
                'blogs'
            ]
            <span></span>
        </code>
    </pre>
    <h5 class="mb-3 mt-5">Configure the templates by changing the DIRS in TEMPLATES list into:</h5>
    <pre>
        <code class="language-Django">
            'DIRS': [BASE_DIR / 'templates']
            <span></span>
        </code>
    </pre>
    <h5 class="mb-3 mt-5">Configure the static and media files.</h5>
    <pre class="mb-5">
        <code class="language-Django">
            STATIC_URL = 'static/'
            STATICFILES_DIRS = [
                BASE_DIR / "static",
            ]
            STATIC_ROOT = BASE_DIR / "staticfiles"
            MEDIA_URL = '/media/'
            MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
            <span></span>
        </code>
    </pre>
    <hr />
    <h5 class="mb-4 mt-5">Change the magazine urls into the following code to include blogs urls. Configure the static and media files.</h5>
    <pre class="mb-5">
        <code class="language-Django">
            from django.contrib import admin
            from django.urls import include, path
            from django.conf.urls.static import static
            from django.conf import settings
            urlpatterns = [
                path('admin/', admin.site.urls),
            path("", include("blogs.urls")),
            ]+static(settings.MEDIA_URL,document_root=settings.MEDIA_ROOT)
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">Models</h2>
    <div class="mt-4"></div>
    <pre>
        <code class="language-Django">
            from django.db import models
            from django.contrib.auth.models import User
            class Author(models.Model):
                name = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name="Name")
                email = models.EmailField(verbose_name="Email", unique=True)
                profile_image = models.ImageField(upload_to='profile_images/', verbose_name="Profile Image")
                bio = models.TextField(verbose_name="Bio")
                def __str__(self):
                    return self.email

            class Magazine(models.Model):
                title = models.CharField(max_length=150, verbose_name="Title")
                publish_date = models.DateTimeField(auto_now_add=True, verbose_name="Publish date")
                description = models.TextField(verbose_name="Description")
                def __str__(self) -> str:
                    return self.title
                
            class Blog(models.Model):
                STATUS_CHOICES = [
                    ('d', 'Draft'),
                    ('p', 'Published'),
                    ('w', 'Withdrawn'),
                ]
                author = models.ForeignKey(Author, on_delete=models.CASCADE, verbose_name="Author")
                title = models.CharField(max_length=150, verbose_name="Title")
                content = models.TextField(verbose_name="Content")
                magazine = models.ForeignKey(Magazine, on_delete=models.CASCADE, verbose_name="Magazine")
                status = models.CharField(max_length=1, choices=STATUS_CHOICES, verbose_name="Status")
                cover_image = models.ImageField(upload_to='blog_covers/', verbose_name="Image")
                publish_date = models.DateTimeField(verbose_name="Publish date", blank=True, null=True)
                def __str__(self) -> str:
                    return self.title
            <span></span>
        </code>
    </pre>
    <h5 class="mb-5 mt-4">Author will have unique email, could have multiple blogs. magazine could have multiple blogs. blog should be binded with magazine and author.</h5>
    <hr />
    <h4 class="mb-3 mt-5">Run</h4>
    <pre>
        <code class="language-Django">
            python manage.py migrate
            python manage.py makemigrations
            python manage.py migrate
            <span></span>
        </code>
    </pre>
    <h4 class="mb-3 mt-5">Register your models in admin.py</h4>
    <pre>
        <code class="language-Django">
            from django.contrib import admin
            from .models import Blog, Magazine, Author
            admin.site.register(Blog)
            admin.site.register(Magazine)
            admin.site.register(Author)
            <span></span>
        </code>
    </pre>
    <h4 class="mb-3 mt-5">Run</h4>
    <pre>
        <code class="language-Django">
            python manage.py createsuperuser
            python manage.py runserver
            <span></span>
        </code>
    </pre>
    <h6 class="mb-0 mt-3">Navigate to the /admin/</h6>
    <h6 class="mb-5 mt-2">Example: http://127.0.0.1:8000/admin/</h6>

    <hr />
    <h2 class="my-5 custom-title">View</h2>
    <h5 class="mb-2 mt-4">Get all magazines ordered from the latest magazines to the oldest one.</h5>
    <pre>
        <code class="language-Django">
            from django.shortcuts import render
            from .models import *
            def magazines(request):
                magazines = Magazine.objects.all().order_by("-publish_date")
                return render(request, "blogs/homepage.html", {"magazines":magazines})
            <span></span>
        </code>
    </pre>
    <h5 class="mb-2 mt-5">Get a magazine by its id. Get all published blogs related to that magazine.</h5>
    <pre>
        <code class="language-Django">
            def magazine(request, pk):
                magazine = Magazine.objects.get(pk=pk)
                blogs = Blog.objects.filter(magazine_id=pk, status="p").order_by("-publish_date")
                return render(request, "blogs/magazine_details.html", {"magazines":magazine, "blogs":blogs})
            <span></span>
        </code>
    </pre>
    <h5 class="mb-2 mt-5">Get blog by its id.</h5>
    <pre>
        <code class="language-Django">
            def blog(request, pk):
                blog = Blog.objects.get(pk=pk)
                return render(request, "blogs/blog_details.html", {"blog":blog})
            <span></span>
        </code>
    </pre>
    <h5 class="mb-2 mt-5">Get author by its id. get all published blogs related to that author.</h5>
    <pre class="mb-5">
        <code class="language-Django">
            def author(request, pk):
                author = Author.objects.get(pk=pk)
                blogs = Blog.objects.filter(author=author, status='p')
                return render(request, "blogs/author.html", {"author":author, "blogs":blogs})
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">URL</h2>
    <h5 class="mb-4 mt-4">Add previous views into the urls file:</h5>
    <pre class="mb-5">
        <code class="language-Django">
            from django.urls import path
            from . import views
            app_name = 'blogs'
            urlpatterns = [
                path('', views.magazines, name="magazines"),
                path('magazine/&lt;int:pk&gt;/', views.magazine, name="magazine-details"),
                path('blog/&lt;int:pk&gt;/', views.blog, name="blog-details"),
                path('author/&lt;int:pk&gt;/', views.author, name="author-details"),
            ]
            <span></span>
        </code>
    </pre>

    <hr />
    <h2 class="my-5 custom-title">Template</h2>
    <h5 class="mb-0 mt-4">Base view is used as shared view for all views.</h5>
    <h5 class="mb-5 mt-4">Create templates folder inside the blogs app. Create a blogs folder inside the templates folder. Add base.html, homepage.html, magazine_details.html, blog_details.html, author.html</h5>
    <hr />
    <h4 class="mb-3 mt-5 custom-color">base.html</h4>
    <pre class="mb-5">
        <code class="language-html">
            &lt;html lang="en"&gt;
            &lt;head&gt;
                &lt;meta charset="UTF-8"&gt;
                &lt;title&gt;KDjango&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;div class="header"&gt;
                    &lt;h1&gt;KDjango Site&lt;/h1&gt;
                    &lt;div&gt;
                        &lt;h3&gt;
                            &lt;a href="{% url 'blogs:magazines' %}"&gt;Magazines&lt;/a&gt;
                        &lt;/h3&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                {% block content %}{% endblock %}
            &lt;/body&gt;
            &lt;/html&gt;
        </code>
    </pre>
    <hr />
    <h4 class="mb-3 mt-5 custom-color">homepage.html</h4>
    <pre class="mb-5">
        <code class="language-html">
            {% include "blogs/base.html" %}
            {% block content %}
                {% for magazine in magazines %}
                    &lt;div&gt;
                        &lt;a href="{% url 'blogs:magazine-details' magazine.id %}"&gt;
                            &lt;p&gt;{{ magazine.title }}&lt;/p&gt;
                        &lt;/a&gt;
                    &lt;/div&gt;
                {% endfor %}
            {% endblock %}
        </code>
    </pre>
    <hr />
    <h4 class="mb-3 mt-5 custom-color">magazine_details.html</h4>
    <pre class="mb-5">
        <code class="language-html">
            {% include "blogs/base.html" %}
            {% block content %}
                &lt;div&gt;
                    &lt;h3&gt;{{ magazine.title }}&lt;/h3&gt;
                    &lt;p&gt;{{ magazine.description }}&lt;/p&gt;
                    &lt;p&gt;
                        Created on {{ magazine.publish_date }}
                    &lt;/p&gt;
                &lt;/div&gt;
                {% if blogs %}
                    {{ blogs|length }} Blogs:
                    {% for blog in blogs %}
                        &lt;div&gt;
                            &lt;a href="{% url 'blogs:blog-details' blog.id %}"&gt;
                                &lt;img src="{{ blog.cover_image.url }}"&gt;
                            &lt;/a&gt;
                            &lt;p&gt;Author: {{ blog.author.name }}&lt;/p&gt;
                            &lt;a href="{% url 'blogs:blog-details' blog.id %}"&gt;
                                &lt;h4&gt;Title: {{ blog.title }}&lt;/h4&gt;
                            &lt;/a&gt;
                        &lt;/div&gt;
                    {% endfor %}
                {% else %}
                    &lt;h3&gt;0 blogs... No blogs to display&lt;/h3&gt;
                {% endif %}
            {% endblock %}
        </code>
    </pre>
    <hr />
    <h4 class="mb-3 mt-5 custom-color">blog_details.html</h4>
    <pre class="mb-5">
        <code class="language-html">
            {% include "blogs/base.html" %}
            {% block content %}
                &lt;div&gt;
                    &lt;div&gt;
                        &lt;img src="{{ blog.cover_image.url }}"&gt;
                    &lt;/div&gt;
                    &lt;div&gt;
                        &lt;h4&gt;Magazine: {{ blog.magazine }}&lt;/h4&gt;
                        &lt;a href="{% url 'blogs:author-details' blog.author.id %}"&gt;
                            &lt;h4&gt;Author: {{ blog.author.name }}&lt;/h4&gt;
                        &lt;/a&gt;
                        &lt;h4&gt;Title: {{ blog.title }}&lt;/h4&gt;
                        &lt;h4&gt;Created on: {{ blog.publish_date }}&lt;/h4&gt;
                    &lt;/div&gt;
                    &lt;div&gt;
                        &lt;p&gt;{{ blog.content }}&lt;/p&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            {% endblock %}
        </code>
    </pre>
    <hr />
    <h4 class="mb-3 mt-5 custom-color">author.html</h4>
    <pre class="mb-5">
        <code class="language-html">
            {% include "blogs/base.html" %}
            {% block content %}
                &lt;div&gt;
                    &lt;h3&gt;Name: {{ author.name }}&lt;/h3&gt;
                    &lt;p&gt;Email: {{ author.email }}&lt;/p&gt;
                    &lt;p&gt;{{ author.bio }}&lt;/p&gt;
                    &lt;img src="{{ author.profile_image.url }}"&gt;
                &lt;/div&gt;
                {% if blogs %}
                    {{ blogs|length }} Blogs
                    {% for blog in blogs %}
                        &lt;div&gt;
                            &lt;a href="{% url 'blogs:blog-details' blog.id %}"&gt;
                                &lt;h4&gt;Title: {{ blog.title }}&lt;/h4&gt;
                            &lt;/a&gt;
                        &lt;/div&gt;
                    {% endfor %}
                {% else %}
                    &lt;p&gt;0 Blogs&lt;/p&gt;
                {% endif %}
            {% endblock %}
        </code>
    </pre>
</div>