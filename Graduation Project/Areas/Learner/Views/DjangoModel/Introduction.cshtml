<div style="max-width:75%; text-align:center; margin-left:auto; margin-right:auto;" class="d-flex flex-column justify-content-center align-content-center text-start">
    <h1 class="p-4 my-5 custom-title" style="font-size: 80px; font-weight: 700;">Introduction</h1>
    <h4 class="mt-4 text-center mb-5">
        In the models file you will be able to design your database tables.
        Instead of typying a row database code. Django facilitates that by using the models.
        The models file will take your code then it will interpret it into database language.
    </h4>
    <hr />
    <h4 class="mt-5 mb-5">We will explain this process in Migration section. To build your model you will need to implement the following steps always.</h4>

    <hr />
    <h2 class="my-5 custom-title">First step</h2>
    <h5 class="mt-5 mb-4">Give a name for the table and invoke the Model package to enable django reading it to interpret it into database Table.</h5>
    <div class="d-flex justify-content-start mb-5">
        <h5 class="rounded p-3 custom-back">Class Table name (models.Model)</h5>
    </div>

    <hr />
    <h2 class="my-5 custom-title">Second step</h2>
    <h5 class="mt-5 mb-4">Insert your field name, define its type and restrict it (validation).</h5>
    <div class="d-flex justify-content-start mb-5">
        <h5 class="rounded p-3 custom-back">field name = models.type(validation)</h5>
    </div>

    <hr />
    <h4 class="mt-5 mb-3">Example</h4>
    <pre class="mb-5">
        <code class="language-Django">
            class Person(models.Model):
                first_name = models.CharField(max_length=30)
                last_name = models.CharField(max_length=30)
            <span></span>
        </code>
    </pre>
    <h5 class="mt-2 mb-5">
        Explanation: 
        <span style="font-size: 17px;">
            first_name and last_name will be string for that we used CharField type. we want it to be at most 30 letters.
            Users can't exceed the max length. if that happen they will get an error.
        </span>
    </h5>

    <hr />
    <h4 class="mt-5 mb-4">Example</h4>
    <pre>
        <code class="language-Django">
            class Category(models.Model):
                name = models.CharField(max_length=100)
                description = models.TextField()
            <span></span>
        </code>
    </pre>
    <h6 class="mt-4 mb-5 custom-color">Note: we will explain field types and validation in separated section.</h6>

    <hr />
    <h4 class="mt-5 mb-4">Example</h4>
    <pre class="mb-5">
        <code class="language-Django">
            class Product(models.Model):
                name = models.CharField(max_length=200)
                description = models.TextField()
                price = models.DecimalField(max_digits=10, decimal_places=2)
                image = models.ImageField(upload_to='products/')
                created_at = models.DateTimeField()
            <span></span>
        </code>
    </pre>
    <hr />
    <h3 class="mt-5 mb-4 custom-color">Why some fields have validation and required restriction?</h3>
    <h5 class="mt-3 mb-5">The answer will be in the field types section.</h5>

    <hr />
    <h2 class="my-5 custom-title">__str__ function</h2>
    <h5 class="mt-3 mb-5">
        When you create an object the display result will be Model name object(number).
        To change it, you can use __str__ function that enables you to change the display format.
    </h5>
    <hr />
    <h4 class="mt-5 mb-4">Before</h4>
    <pre class="mb-3">
        <code class="language-Django">
            class User(models.Model):
                name = models.CharField(max_length=100)
            <span></span>
        </code>
    </pre>
    <figure class="figure mb-5">
        <img src="~/images/project_images/model/__str__.png" class="figure-img img-fluid rounded img-border">
    </figure>
    <hr />
    <h4 class="mt-5 mb-4">After</h4>
    <pre>
        <code class="language-Django">
            class User(models.Model):
                name = models.CharField(max_length=100)
                def __str__(self):
                    return self.name
            <span></span>
        </code>
    </pre>
    <figure class="figure mb-5 mt-3">
        <img src="~/images/project_images/model/__str__1.png" class="figure-img img-fluid rounded img-border">
    </figure>
</div>