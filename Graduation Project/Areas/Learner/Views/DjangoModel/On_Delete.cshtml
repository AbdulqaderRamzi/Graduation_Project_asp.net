<div style="max-width:75%; text-align:center; margin-left:auto; margin-right:auto;" class="d-flex flex-column justify-content-center align-content-center text-start">
    <h1 class="p-4 my-5 custom-title" style="font-size: 80px; font-weight: 700;">On Delete</h1>
    <hr />
    <h3 class="mb-5 mt-5 custom-color text-center">Models</h3>
    <pre>
        <code class="language-Django">
            class Author(models.Model):
                name = models.CharField(max_length=100)

            class Book(models.Model):
                title = models.CharField(max_length=100)
                author = models.ForeignKey(Author, on_delete)
            <span></span>
        </code>
    </pre>
    <h4 class="mb-5 mt-4">Each author could have multiple books, each book could be related to one author.</h4>
    <hr />
    <h3 class="mb-0 mt-5 custom-color">What will happen if author is deleted?</h3>
    <h3 class="mb-3 mt-4 custom-color">Will the books be deleted with author or it will not be related to the author or it will be bind with another author?</h3>
    <h5 class="mb-0 mt-5">You are the one who can decide what will happen.</h5>
    <h5 class="mb-5 mt-2">You have 5 approaches.</h5>

    <hr />
    <h2 class="my-5 custom-title">CASCADE</h2>
    <div class="mt-3"></div>
    <pre>
        <code class="language-Django">
            author = models.ForeignKey(Author, on_delete=models.CASCADE)
            <span></span>
        </code>
    </pre>
    <h5 class="mb-5 mt-5">If the author is deleted. the related books will be also deleted.</h5>

    <hr />
    <h2 class="my-5 custom-title">SET_NULL</h2>
    <div class="mt-3"></div>
    <pre>
        <code class="language-Django">
            author = models.ForeignKey(Author, on_delete=models.SET_NULL, null=True, blank=True)
            <span></span>
        </code>
    </pre>
    <h5 class="mb-5 mt-5">If the author is deleted. the related books will not be binded to that author so the author field in book will be null.</h5>

    <hr />
    <h2 class="my-5 custom-title">PROTECT and RESTRICT</h2>
    <div class="mt-3"></div>
    <pre>
        <code class="language-Django">
            author = models.ForeignKey(Author, on_delete=models.PROTECT)
            author = models.ForeignKey(Author, on_delete=models.RESTRICT)
            <span></span>
        </code>
    </pre>
    <h5 class="mb-5 mt-5">If the author has related books. author can't be deleated until it become unrelated to any book so, You won't be able to delete the Author as long as it has associated books objects.</h5>

    <hr />
    <h2 class="my-5 custom-title">DO_NOTHING</h2>
    <div class="mt-3"></div>
    <pre>
        <code class="language-Django">
            author = models.ForeignKey(Author, on_delete=models.DO_NOTHING)
            <span></span>
        </code>
    </pre>
    <h5 class="mb-0 mt-5">If author is deleted. the related books will still have the deleted author ForeignKey reference.</h5>
    <h5 class="mb-5 mt-4">Example: If the book is related to the author id = 1, if the author is deleted. the ForeignKey reference still equal 1.</h5>

    <hr />
    <h2 class="my-5 custom-title">SET_DEFAULT</h2>
    <div class="mt-3"></div>
    <pre>
        <code class="language-Django">
            author = models.ForeignKey(Author, on_delete=models.SET_DEFAULT, default=1)
            <span></span>
        </code>
    </pre>
    <h5 class="mb-0 mt-5">If the author is deleted. the related books will be bind with the default id author.</h5>
    <h5 class="mb-5 mt-4">Example: If the book related to author id = 2, if author id = 2 is deleted. the ForeignKey reference will equal 1, so it will be binded with author id = 1.</h5>
    <hr />
    <h5 class="mb-0 mt-5">CASCADE - SET_NULL - PROTECT and RESTRICT - DO_NOTHING - SET_DEFAULT</h5>
    <h5 class="mb-5 mt-4">Can be used with all relationships.</h5>
</div>